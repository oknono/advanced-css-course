/* set something for every element */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /*box-sizing: border-box;*/
  box-sizing: inherit; }

/* project wide font definitions (because inheritance */
html {
  font-size: 62.5%;
  /* counting on browser setting of 16px */ }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
  /* moved thebox-sizing here to make it inheritable! */ }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  /* what part of image stays on screen */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative; }

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem; }

.header__logo {
  height: 3.5rem; }

.header__text-box {
  position: absolute;
  top: 40%;
  /* image top starts at center - relative to parent  */
  left: 50%;
  /* image left start at center  - relative to parent */
  transform: translate(-50%, -50%);
  /* relative to self */
  text-align: center;
  /* For button */ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* add this to prevent animation "moving" */
  margin-bottom: 6rem; }

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  padding-left: 3.5rem;
  /*min needed is name and duration */
  animation: moveInLeft 1s ease-out; }

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  padding-left: 1.75rem;
  animation: moveInRight 1s ease-out; }

@keyframes moveInLeft {
  /* browser optimized for 2 props - opacity and transform */
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  /* will be treated as text, important for centering */
  border-radius: 10rem;
  transition: all 0.2s;
  /* transition always on initial state */
  position: relative; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn--white::after {
  background-color: #fff; }

.btn::after {
  content: '';
  /* always needs content and display property*/
  display: inline-block;
  width: 100%;
  height: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0px;
  left: 0px;
  z-index: -1;
  transition: all .4s;
  /* this is initial state for .btn:hover::after */ }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards;
  /* don't have button visible on loading */ }
